{"version":3,"sources":["components/ContactsList/ContactsList.js","App.js","index.js"],"names":["ContactsList","contacts","name","map","contact","uuidv4","App","state","handleChange","event","setState","target","value","handleSubmit","e","preventDefault","reset","className","onSubmit","this","type","onChange","pattern","title","required","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAmBeA,EAhBM,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC9B,OACE,gCACE,0CACA,6BAAKD,EAASE,KAAI,SAAAC,GAAO,OACrB,6BAAoBF,GAAXG,wBCyCNC,E,4MA5CbC,MAAQ,CACNN,SAAU,GACVC,KAAM,I,EAGRM,aAAe,SAAAC,GACb,EAAKC,SAAS,CAAER,KAAMO,EAAME,OAAOC,S,EAGrCC,aAAe,SAAAC,GACbA,EAAEC,iBACF,EAAKL,SAAS,CAAET,SAAS,GAAD,mBAAM,EAAKM,MAAMN,UAAjB,CAA2B,EAAKM,MAAML,SAC9D,EAAKc,S,EAGPA,MAAQ,WACN,EAAKN,SAAS,CAAER,KAAM,M,4CAGxB,WACE,OACE,sBAAKe,UAAU,MAAf,UACE,2CACA,uBAAMC,SAAUC,KAAKN,aAArB,UACE,kCACE,wCACA,uBACEO,KAAK,OACLR,MAAOO,KAAKZ,MAAML,KAClBmB,SAAUF,KAAKX,aACfN,KAAK,OACLoB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,OAGZ,wBAAQJ,KAAK,SAAb,4BAEF,cAAC,EAAD,CAAcnB,SAAUkB,KAAKZ,MAAMN,SAAUC,KAAMiB,KAAKZ,MAAML,c,GAvCpDuB,a,MCClBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.2da4733d.chunk.js","sourcesContent":["import { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ContactsList = ({ contacts, name }) => {    \r\n    return (      \r\n      <div>\r\n        <h1>Contacts</h1>\r\n        <ul>{contacts.map(contact => (\r\n            <li key={uuidv4()}>{name}</li>\r\n        ))}\r\n        </ul>\r\n      </div>\r\n  );\r\n};\r\n\r\nContactsList.propTypes = {\r\n  contacts: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nexport default ContactsList;\r\n","import { Component } from 'react';\nimport ContactsList from './components/ContactsList';\n//import AddNewContactForm from './components/AddNewContactForm';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  handleChange = event => {\n    this.setState({ name: event.target.value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState({ contacts: [...this.state.contacts, this.state.name] });\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '' });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            <span>Name</span>\n            <input\n              type=\"text\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              name=\"name\"\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n        <ContactsList contacts={this.state.contacts} name={this.state.name}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"modern-normalize/modern-normalize.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}